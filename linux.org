target remote localhost:3333

* check file's information 
   readelf -h <archive>.a | grep 'Class\|File\|Machine'
   objdump -a *.a|grep 'file format'

* arm-none-eabi-gcc
  --specs=nosys.specs
  #LD_FLAG += --specs=rdimon.specs -lgcc -lc -lm -lrdimon



* Connect to OpenVPN over Shadowsock
Setup OpenVPN and Shadowsocks (Python / Node.js) on your server.

Setup OpenVPN client and Shadowsocks(Python / Node.js) on your local machine.

Connect Shadowsocks.

Add these lines to your .ovpn file:

socks-proxy 127.0.0.1 1080
route SHADOWSOCKS_SERVER_IP 255.255.255.255 net_gateway
Then connect OpenVPN.

Notice: only versions that support UDP relay support this feature.

find /home/andrew/velio/vdm2-firmware/src -path "/home/andrew/velio/vdm2-firmware/src/aws-iot-device-sdk-embedded-C" -prune -o  -path "/home/andrew/velio/vdm2-firmware/src/mbedtls" -prune -o -path "/home/andrew/velio/vdm2-firmware/src/mot/iot/include/aws_iot_json_utils.h" -prune -o -path "/home/andrew/velio/vdm2-firmware/src/mot/mbedtls/library/network.c" -prune -o -path "/home/andrew/velio/vdm2-firmware/src/mot/mbedtls/library/net_sockets.c" -prune -o -path "/home/andrew/velio/vdm2-firmware/src/mot/mbedtls/include/mbedtls/network.h" -prune -o -path "/home/andrew/velio/vdm2-firmware/src/mot/mbedtls/include/mbedtls/config.h" -prune -o -name "*.[chs]" -print > cscope.files

* vitrual box
add user to /etc/group vboxsf to auto-mount sf_share under /media


* indent
C-u M-|indent RET
astyle --style=stroustrup -A4 --indent=spaces=8 firmware/storage.c 

* v2ray setup in ubuntu
wget https://install.direct/go.sh
sudo bash go.sh
copy client.json @tizitizi.tk/client.json to /etc/v2ray/config.json
sudo service v2ray start

终端 terminal
在 .bashrc 或 .zshrc 中设置如下内容

alias setproxy="export ALL_PROXY=socks5://127.0.0.1:10808"
alias unsetproxy="unset ALL_PROXY"
alias ip="curl -i http://ipinfo.io"

